from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.keys import Keys
from pynput import keyboard
import time
import traceback
import json
from bs4 import BeautifulSoup
import os
from datetime import datetime

# Initialize data storage
collected_html_sections = []
collected_form_data = []

# Set up browser (NOT headless so you can see and interact with it)
options = Options()
options.add_experimental_option("detach", True)  # Keeps browser open
driver = webdriver.Chrome(options=options)

# Navigate to login page
login_url = "https://xt.harrisgroup.ie/welcome"
driver.get(login_url)

# Store the original window handle for reference
original_window = driver.current_window_handle

# Prompt user to manually login
print("Please log in manually in the browser window...")

# Extract form data using JavaScript
def extract_all_form_values():
    try:
        form_data = driver.execute_script(""" 
            const allFormData = {
                timestamp: new Date().toISOString(),
                url: window.location.href,
                title: document.title,
                forms: [],
                allInputs: [],
                selectInputs: [],
                textareaInputs: []
            };

            const forms = document.querySelectorAll('form');
            forms.forEach((form, formIndex) => {
                const formInfo = {
                    formIndex: formIndex,
                    id: form.id,
                    name: form.name,
                    action: form.action,
                    method: form.method,
                    className: form.className,
                    fields: []
                };

                const formControls = form.querySelectorAll('input, select, textarea');
                formControls.forEach((control, controlIndex) => {
                    const fieldInfo = {
                        index: controlIndex,
                        tagName: control.tagName.toLowerCase(),
                        type: control.type || '',
                        name: control.name || '',
                        id: control.id || '',
                        className: control.className || '',
                        value: control.value || '',
                        checked: control.checked || false,
                        selected: control.selected || false,
                        disabled: control.disabled || false,
                        readonly: control.readOnly || false,
                        placeholder: control.placeholder || '',
                        maxLength: control.maxLength || null,
                        title: control.title || '',
                        'aria-label': control.getAttribute('aria-label') || '',
                        'data-tooltip': control.getAttribute('data-tooltip') || ''
                    };

                    if (control.tagName.toLowerCase() === 'select') {
                        fieldInfo.options = Array.from(control.options).map(option => ({
                            value: option.value,
                            text: option.text,
                            selected: option.selected
                        }));
                    }

                    formInfo.fields.push(fieldInfo);
                });

                allFormData.forms.push(formInfo);
            });

            const allInputs = document.querySelectorAll('input');
            allInputs.forEach((input, index) => {
                allFormData.allInputs.push({
                    index: index,
                    tagName: input.tagName.toLowerCase(),
                    type: input.type || '',
                    name: input.name || '',
                    id: input.id || '',
                    className: input.className || '',
                    value: input.value || '',
                    checked: input.checked || false,
                    disabled: input.disabled || false,
                    readonly: input.readOnly || false,
                    placeholder: input.placeholder || '',
                    maxLength: input.maxLength || null,
                    title: input.title || '',
                    'aria-label': input.getAttribute('aria-label') || '',
                    'data-tooltip': input.getAttribute('data-tooltip') || '',
                    outerHTML: input.outerHTML
                });
            });

            const allSelects = document.querySelectorAll('select');
            allSelects.forEach((select, index) => {
                allFormData.selectInputs.push({
                    index: index,
                    name: select.name || '',
                    id: select.id || '',
                    className: select.className || '',
                    value: select.value || '',
                    disabled: select.disabled || false,
                    title: select.title || '',
                    options: Array.from(select.options).map(option => ({
                        value: option.value,
                        text: option.text,
                        selected: option.selected
                    }))
                });
            });

            const allTextareas = document.querySelectorAll('textarea');
            allTextareas.forEach((textarea, index) => {
                allFormData.textareaInputs.push({
                    index: index,
                    name: textarea.name || '',
                    id: textarea.id || '',
                    className: textarea.className || '',
                    value: textarea.value || '',
                    disabled: textarea.disabled || false,
                    readonly: textarea.readOnly || false,
                    placeholder: textarea.placeholder || '',
                    title: textarea.title || ''
                });
            });

            return allFormData;
        """)
        collected_form_data.append(form_data)
        return form_data
    except Exception as e:
        print(f"Error extracting form values: {e}")
        traceback.print_exc()
        return None
    
start = 220 # array position to start (inclusive)
end = 600  # array position to end (exclusive)
# List of codes to process
codes = ["C00173421","C00082271", "C00204388", "C00107138", "C00141745", "C00180125", "B00004097", "B00004878", "B00004151", "C00201990", "C00120184", "B00003509", "B00004085", "B00004085", "C00278428", "C00174314", "B00003507", "B00003507", "C00094807", "C00321354", "C00215511", "C00187688", "C00297449-4100", "C00277704-4100", "C00277707-4100", "C00483817-4100", "C00313798", "C00245498-4100", "C00245499-4100", "C00345476-4100", "B00004966", "B00005476", "C00056542", "C00056542", "B00005355", "C00055163", "C00055163", "B00003511", "B00004085", "B00004679", "B00004679", "B00004679", "C00112425", "C00112425", "B00003508", "C00124958-M001", "C00124959-M001", "C00166103", "C00168841", "C00142883", "C00142884", "C00124812", "C00124968", "C00217494", "C00217496", "C00124820", "C00124821", "C00303438", "C00038549", "C00142756", "C00142852", "C00124521", "C00142753", "C00142754", "B00004653", "B00004653", "C00053812", "C00041988", "C00065153", "C00065153", "C00065153", "C00059723", "C00158182", "C00166110", "C00166111", "C00166112", "C00166115", "C00247361", "C00247362", "C00124822", "C00124823", "C00168843", "C00168844", "B00004653", "C00065153", "C00158182", "C00059723", "C00142755", "C00142756", "C00277064", "B00003507", "C00297032", "C00297033", "C00140220", "C00140220", "C00060383", "C00089153", "C00247638", "C00427755", "C00427756", "B00005905", "C00323930", "C00323931", "C00308810-4100", "C00308812-4100", "C00276943-4100", "C00276944-4100", "C00310232-4100", "C00295952-4100", "C00245958-4100", "C00245957-4100", "C00027104-4100", "C00323912-4100", "C00136347", "C00323909-4100", "C00281102", "C00124973", "C00124974", "C00174049", "C00088766", "C00193341", "C00088346", "C00174047", "C00294357", "C00174048", "C00188105", "C00309606", "C00085419", "B00004035", "C00085416", "B00006009", "C00396825", "C00649758", "C00032363", "C00032363", "C00033985", "B00004796", "C00278775", "C00166925", "B00005445", "C00122490", "C00122493", "B00003509", "C00277070", "B00003509", "B00003511", "B00003508", "B00004035", "C00165884", "C00222916", "C00069920", "C00222917", "C00003695", "C00003696", "C00022380", "C00024572", "C00024573", "C00095413", "C00120455", "C00204039", "C00204040", "C00333494", "C00308577", "C00145293", "C00451027", "C00333495", "C00308578", "C00003695", "C00003696", "C00022380", "C00024572", "C00024573", "C00120455", "C00163836", "C00163790", "C00163791", "C00163796", "C00163842", "C00163843", "C00204039", "C00204040", "C00333494", "C00145293", "C00451027", "C00333495", "C00163794", "C00163795", "C00163844", "C00163845", "C00083228", "B00004856", "C00081697", "C00105133", "C00080771", "C00080772", "C00577454", "C00577456", "B00005245", "B00004153", "C00081695", "C00081696", "C00168948", "C00168950", "C00168949", "C00168951", "C00168953", "C00154168", "C00154169", "C00167156", "B00003511", "B00004762", "B00005330", "C00026278", "C00337351", "C00339339", "C00339340", "C00277602", "C00277603", "B00004906", "C00316733", "C00168955", "C00168956", "C00168957", "C00168958", "C00280449", "C00034840", "C00124519-L001", "C00149477", "C00149478", "C00034841", "C00034864", "C00034865", "C00034866", "C00034867", "C00166105", "C00166107", "B00004653", "B00004683", "C00059723", "C00053812", "C00053812", "C00065153", "B00005257", "C00124834", "C00167264", "C00145644", "C00145645", "C00145646", "C00145647", "C00124830", "C00124831", "B00004199", "B00004199", "B00004683", "B00004683", "B00005177", "C00053812", "C00053812", "B00004653", "C00004540", "C00059723", "C00124805", "C00218286", "C00249361", "C00249362", "C00059723", "C00059723", "C00065153", "C00018966", "C00092096", "C00278385", "C00019959", "C00138431", "B00004034", "C00494020", "C00325457", "B00005351", "C00055163", "B00004953", "C00888880", "C00888881", "C00888882", "C00306666", "C00564039", "C00564029", "C00564036", "C00564031", "C00564032", "C00564033", "C00564035", "C00564037", "C00564038", "C00564034", "C00564040", "C00564041", "C00564042", "C00564043", "C00564044", "C00564046", "B00005351", "C00055163", "B00004953", "C00888880", "C00888881", "C00888882", "C00306666", "C00205310", "C00396072", "C00396070", "B00004110", "C00097090", "C00395936", "C00260973", "C00254634", "C00272931", "C00316554", "C00281794", "C00304122", "C00084145", "C00101952", "C00094838", "B00004606", "C00199839", "C00199837", "C00094770", "B00003509", "C00084142", "C00077445", "C00084166", "C00084144", "C00100402", "C00100426", "C00321830", "B00004025", "B00004085", "B00004623", "C00233173", "C00364450", "C00428094", "C00047710", "C00205146", "C00004548", "C00165954-M001", "C00165953-M001", "C00065153", "C00083158", "C00167387", "C00167646", "C00124256", "B00005177", "B00004623", "C00385580-M001", "C00287425", "C00287426", "B00005251", "C00124694", "C00076595", "C00202823", "C00202824", "C00056659", "C00056660", "C00027370", "C00027367", "C00014021", "C00013590", "C00003413", "C00003415", "B00004653", "C00027374", "C00127570", "C00122258", "C00301137", "C00085605", "B00004085", "B00004085", "B00004303", "C00198458", "C00198457", "C00198459", "C00340263", "B00004623", "C00033625", "C00268860", "C00194011", "C00268862", "C00268859", "C00268861", "C00268857", "C00268855", "C00334115", "C00268854", "C00193999", "C00268856", "C00268858", "C00194010", "B00004035", "C00427675", "C00280653", "C00325643", "C00123785", "B00006032", "C00137990", "C00120693", "C00096065", "C00071856", "C00201594", "C00167466", "C00457823", "C00167469", "C00457818", "B00004085", "B00004085", "B00004085", "B00004085", "B00004085", "B00004861", "C00198477", "C00198480", "C00198487", "C00075228", "C00123797", "C00123798", "C00167186", "C00173630", "C00173631", "C00173633", "B00003507", "B00004035", "B00004035", "B00004034", "B00004034", "B00003510", "B00003509", "C00257603", "C00026641-F017", "C00077242", "C00257604", "C00174384", "C00195768", "C00166479", "C00277709-4100", "C00393228-4100", "C00167397-F057", "C00638478", "C00638479", "C00638474", "C00174124", "C00174126-D128", "C00174129", "C00174127", "C00174128-D128", "C00174122", "C00218834-F070", "C00196462-F070", "C00174123", "C00174178", "C00174185", "C00253935", "C00253934", "C00194267", "C00194267", "C00194268", "C00194268", "C00194268", "C00194268", "C00194268", "C00167481", "C00326298", "C00018966", "C00018966", "C00017863", "C00017865", "C00017865", "C00146565", "C00047731", "C00220631", "C00013585", "C00053801", "C00254949", "C00254950", "C00103959", "C00103960", "C00103938", "C00165566", "C00165567", "C00126221", "C00004535", "C00070907", "C00165780", "C00059724-A148", "C00267531", "C00267532", "C00288607", "C00124922", "C00165779", "C00124921", "C00339887", "C00174949", "B00004107", "B00004764", "B00004839", "C00004535", "C00018966", "C00023899", "C00023900", "C00211512", "C00285209", "C00167394", "C00167395", "C00059724-A148", "C00323348", "C00057760-D109", "C00197699", "C00197700", "C00082441-D110", "C00166539", "C00026221-A060", "C00026221-A148", "B00004840", "C00235824", "C00124876", "C00235826", "C00165777", "C00235834", "C00124883", "C00235835", "C00124884", "C00166141", "C00352821", "C00165784", "C00352818", "C00059724-A148", "C00059724-A148", "C00047244", "C00047244", "C00047244", "C00047244", "C00047244", "B00004798", "B00004799", "B00004851", "B00004851", "B00004851", "B00004851", "B00004941", "B00004941", "B00005255", "C00122574", "C00313113", "C00122579", "C00213593", "C00169136", "C00022603", "C00218066", "C00218066", "C00022606", "C00521629", "C00022598", "C00186732", "C00017192-F001", "C00186732", "C00061185", "C00342773", "C00004983", "C00276130", "C00145605", "C00155107", "C00276787", "C00144267", "C00188677", "C00188757", "B00005330", "C00315897", "C00188735", "C00188745", "C00188756", "C00188737", "C00495329", "B00004681", "B00005251", "B00004085", "B00005330", "C00336020", "C00313462", "C00313461", "C00419032", "B00004085", "B00004212", "B00004761", "B00005177", "B00003509", "B00004085", "C00313459", "B00004865", "C00353974", "C00489232", "C00155000", "B00004681", "B00004653", "B00003507", "C00078222", "C00375192", "C00336933", "C00447095", "B00004762", "C00452040", "C00452602", "C00452603", "B00003509", "C00480851", "C00188627", "C00476279", "C00419031", "C00176484", "C00050126", "C00211165", "C00103977", "C00211122", "C00211163", "C00213565", "C00280656", "C00213568", "C00211082", "C00211077", "C00213571", "C00211100", "C00211099", "C00213573", "C00211099", "C00054400", "C00050168", "C00213574", "C00213575", "C00213576", "C00213577", "C00213578", "C00213579", "C00213581", "C00213564", "C00213582", "C00213583", "C00104607", "C00211169", "C00211164", "C00213563", "C00050142", "C00213564", "C00050143", "C00211165", "C00103977", "C00211122", "C00211163", "C00213565", "C00213568", "C00211082", "C00211077", "C00213571", "C00211100", "C00213573", "C00211099", "C00054400", "C00050168", "C00213574", "C00213575", "C00213576", "C00213577", "C00213578", "C00213579", "C00213581", "C00213582", "C00213583", "C00104607", "C00211164", "C00213563", "C00050142", "C00213564", "C00050143", "C00050126", "C00211164", "C00213563", "C00050143", "C00050142", "C00213564", "C00050126", "C00211165", "C00103977", "C00211122", "C00211163", "C00213565", "C00280656", "C00213568", "C00211082", "C00211077", "C00213571", "C00211100", "C00213573", "C00211099", "C00054400", "C00050168", "C00213574", "C00213575", "C00213576", "C00213577", "C00213578", "C00213579", "C00213581", "C00213582", "C00213583", "C00104607", "C00211169", "C00186050", "C00186051", "C00270417", "C00270446", "C00270447", "C00270448", "C00270449", "B00004856", "C00081704", "C00083228", "C00084801", "C00231992", "C00231992", "C00145263", "C00277590", "C00142714", "B00005330", "C00085077", "B00004986", "C00296819", "B00005212", "B00004623", "C00165885", "C00044830", "C00085895", "B00004108", "C00041988", "B00005177", "B00005177", "C00241089", "C00097979", "C00085867", "C00322363", "C00166016", "C00166017", "C00309149", "C00241090", "C00166022", "C00165999", "C00166019", "C00166012", "B00004955", "C00222329", "C00206257-4100", "C00206588-4100", "C00234027", "C00241091", "C00146542", "C00166010", "C00222329", "C00176914", "C00233912", "C00267529", "C00060045", "C00099337", "C00099335", "C00146565", "B00004108", "C00069105", "C00069105", "B00005419", "C00165573", "C00165575", "C00051097", "C00086462", "B00004955", "B00005331", "C00047650", "C00047651", "C00013595", "C00013594", "C00013590", "C00040648", "C00032846", "C00309677", "C00014021", "C00130981", "C00130985", "C00003417", "C00165568", "C00165572", "C00244045", "C00244046", "B00005177", "B00005299", "C00116724", "C00160309", "C00160310", "C00179577", "C00089726", "C00081470", "C00177469", "B00004861", "B00003507", "B00003507", "C00385022", "C00047766", "B00004428", "C00123419", "C00123420", "C00430210", "C00295813", "C00489666", "C00156174", "C00178619", "C00268268", "C00191101-F139", "C00191100-F139", "C00268263", "C00268265", "C00191098", "C00191105", "C00191289", "C00268266", "C00003208", "C00003209", "C00291597", "C00059724", "C00489676", "C00489677", "C00489665", "C00156174", "C00178620", "C00268268", "C00191101-F139", "C00191100-F139", "C00268265", "C00191105", "C00191296", "C00268267", "C00003209", "C00291598", "C00059724", "C00489676", "C00489677", "C00226437", "C00226438", "B00004273", "B00003509", "C00167626", "C00167627", "C00051875", "C00167628", "C00124370", "C00124473", "C00124365", "B00004108", "C00342451", "C00342451", "C00124154", "C00124157", "B00004100", "C00083197", "C00083198", "C00016562", "B00004839", "C00241093", "C00241094", "C00301721-4100", "C00301722-4100", "C00130657", "C00063136", "C00063135", "C00130655", "B00004979", "C00225483", "C00225484", "C00421273", "C00421274", "C00124678", "C00124679", "C00124687", "C00124688", "C00124689", "C00124690", "C00218022", "C00124197", "C00124191", "B00004034", "C00177002", "C00124220", "C00384599", "B00003507", "B00003507", "C00167617", "C00054623", "B00004108", "C00165812", "C00165847", "C00125039", "C00165851", "C00049525", "B00003507", "C00310151-4100", "C00165814", "B00004858", "C00165815", "B00004859", "C00165816", "B00004859", "B00003508", "C00062049", "C00062050", "C00041988", "C00165817", "C00167513", "C00167514", "C00020489", "C00020487", "C00188600", "C00288688", "C00210059", "B00004653", "B00004839", "C00065153", "B00004799", "B00004939", "C00022015", "C00166160", "C00280149", "C00280147", "C00280122", "C00280119", "C00280125", "C00280478", "C00401226", "C00110731", "B00004820", "C00166073", "C00185799", "C00002920", "C00002920", "C00166080", "B00003507", "C00392360", "C00248716", "C00248718", "C00127528", "C00127531", "C00127536", "C00134531", "C00134533", "C00134534", "C00134535", "C00134537", "C00134540", "C00248719", "C00248722", "C00134553", "C00245601", "B00004153", "B00004941", "B00004957", "B00004957", "B00004966", "B00005800", "B00005805", "B00005805", "B00005810", "C00024970", "C00081560", "C00081561", "C00081960", "C00081963", "C00081964", "C00098492", "C00098644", "C00135316", "C00135317", "B00004799", "B00004799", "B00004799", "B00005180", "B00005805", "B00005805", "B00005883", "B00006028", "C00122587", "C00278091", "C00278170", "C00122630", "C00278171", "C00248724", "C00122656", "C00122656", "C00127330", "C00399477", "C00399478", "C00438411", "C00017597", "C00017616", "C00017617", "C00017618", "C00017619", "C00017620", "C00017621", "C00017622", "C00017623", "C00017624", "C00017625", "C00017626", "C00017627", "C00165870", "C00140197", "C00137513", "C00030048", "C00253427", "C00253426", "C00253430", "C00253428", "C00166321", "C00118506", "C00253479", "C00190097", "C00190118", "C00190098", "C00190099", "C00190121", "C00188538", "C00203960", "C00289324", "C00041192", "C00017370", "C00017370", "C00074268", "C00176662", "C00176661", "C00176660", "C00050803", "B00005370", "C00074269", "C00134346", "C00074267", "C00130628", "B00004683", "C00075902", "C00075888", "B00004128", "C00075892", "C00075893", "C00086777", "B00004839", "B00004085", "B00004085", "C00077465", "C00103402", "C00233395", "B00004152", "B00004152", "C00077230", "C00117581", "C00117582", "C00307229", "C00102212", "C00183602", "C00270572", "C00308789", "C00453377", "C00123939", "B00004273", "C00077411", "C00077412", "B00004085", "B00003509", "B00003507", "B00003507", "C00294794-4100", "B00005180", "B00004799", "C00119161", "C00076601", "C00076602", "C00113808", "C00113809", "C00076603", "C00076604", "C00113645", "C00113646", "C00059723", "C00059723", "B00004653", "B00004653", "B00005330", "B00005330", "C00004548", "C00004548", "C00104005", "C00086911-4100", "C00289080-4100", "C00078928-4100", "C00077661-4100", "C00077661-4100", "C00086910-4100", "C00081037-4100", "C00107304-4100", "C00250599-4100", "C00077641-4100", "C00294677-4100", "C00081713-4100", "C00248518-4100", "C00077002-4100", "C00308691-4100", "C00126071-4100", "C00081130-4100", "C00311674-4100", "C00243765-4100", "C00237248-4100", "C00087658-4100", "C00087670-4100", "C00097750-4100", "C00320159-4100", "C00134445-4100", "C00080884-4100", "C00090120-4100", "C00077035-4100", "C00077016-4100", "C00320158-4100", "C00099024-4100", "C00237247-4100", "C00182324-4100", "C00077034-4100", "C00290803-4100", "C00107801-4100", "C00283250-4100", "C00087585-4100", "C00087585-4100", "C00087585-4100", "C00077040-4100", "C00290804-4100", "C00116865-4100", "C00095202-4100", "C00118988-4100", "C00077048", "C00077050", "C00076624", "C00076625", "C00002521", "C00002522", "C00175249", "C00175250", "C00136459", "C00136460", "C00076608", "C00076609", "C00102154", "C00076611", "C00097786", "C00134931", "C00134932", "C00213912", "C00213915", "C00002524", "C00002525", "C00204066", "C00204067", "C00076621", "C00076622", "C00076620", "C00076630", "C00076631", "C00303771", "C00076668", "C00303779", "C00143480", "C00143482", "C00181734", "C00181734", "C00181734", "C00059724", "C00059724", "C00059724", "C00059724", "C00097009", "C00004548", "B00003507", "B00004653", "B00004653", "C00065153", "C00223414", "C00184646", "C00184643", "C00142276", "B00005412", "C00246976", "C00286159-4100", "C00265877-4100", "C00113098-4100", "C00273483-4100", "C00112350-4100", "C00112353-4100", "C00112355-4100", "C00279853", "B00003509", "B00004085", "B00003507", "B00004303", "C00200137-4100", "C00043557-4100", "C00085455-4100", "C00304697-4100", "C00076745-4100", "C00030142-4100", "C00076740-4100", "C00076746-4100", "C00097606-4100", "C00078506-4100", "C00320251-4100", "C00105977-4100", "C00078508-4100", "C00189355-4100", "C00241079-4100", "C00323925-4100", "C00099276-4100", "C00200138-4100", "C00043556-4100", "C00085456-4100", "C00304698-4100", "C00076799-4100", "C00030141-4100", "C00076796-4100", "C00076800-4100", "C00097607-4100", "C00078507-4100", "C00105978-4100", "C00320252-4100", "C00078509-4100", "C00189354-4100", "C00087026-4100", "C00099277-4100", "C00087038-4100", "C00199742-4100", "C00076714-4100", "C00238180-4100", "C00320146-4100", "C00320144-4100", "C00090654-4100", "C00076753-4100", "C00100797-4100", "C00105825-4100", "C00106835-4100", "C00100798-4100", "C00076751-4100", "C00308207-4100", "C00138368-4100", "C00049982-4100", "C00076760-4100", "C00254201-4100", "C00118329-4100", "C00138380-4100", "C00238181-4100", "C00320147-4100", "C00320145-4100", "C00090687-4100", "C00076810-4100", "C00100797-4100", "C00105825-4100", "C00106835-4100", "C00100798-4100", "C00076809-4100", "C00306700-4100", "C00138369-4100", "C00049983-4100", "C00076817-4100", "C00254200-4100", "C00249128-4100", "C00117850-4100", "C00097522-4100", "C00076699-4100", "C00030135-4100", "C00173974-4100", "C00091221-4100", "C00098145-4100", "C00076704-4100", "C00204025-4100", "C00193242-4100", "C00204030-4100", "C00076704-4100", "C00078450-4100", "C00058388-4100", "C00060951", "C00234297", "C00234298", "C00085963", "C00085964", "C00074421", "C00284311", "C00094317", "C00146573", "C00219058", "C00219059", "C00219061", "C00219062", "C00219063", "C00219064", "C00219065", "B00004796", "C00042678", "B00003514", "B00004455", "B00004682", "B00004682", "B90000035", "C00076420", "C00076421", "C00076422", "C00076423", "C00076424", "C00113465", "C00112745", "B00004762", "B90000621", "C00010097", "C00111228", "C00111232", "B00003508", "B00004096", "C00155286", "C00054221", "C00003695", "C00003696", "C00022380", "C00027574", "C00053986", "C00056425", "C00095414", "C00085399", "C00085400", "C00075683", "C00075684", "C00075686", "C00075685", "C00075687", "C00075688", "C00103271", "C00217255", "C00085392", "C00085393", "C00085403", "C00085404", "C00085405", "C00094333", "C00094330", "C00095413", "C00095415", "C00100013", "C00120457", "B00003512", "C00120456", "C00020183", "B00005783", "C00085531", "C00050648", "C00085529", "B00004748", "C00075415", "C00074527", "B00003509", "C00074533", "C00074534", "C00075413", "C00075414", "C00085524", "B00005789", "C00048008", "C00086415", "C00074813", "B00004953", "C00074523", "C00074525", "C00212539", "C00212542", "C00212543", "C00212541", "C00212540", "C00074582", "C00074583", "C00287966", "C00287967", "B00004031", "C00073633", "C00073635", "C00073637", "C00235439", "C00235440", "C00075693", "C00138592", "C00138593", "B00003510", "B00003509", "C00193380", "C00193379", "B00003511", "B00003508", "C00284405", "C00076501", "C00076502", "B00004153", "C00212550", "C00212541", "C00212540", "C00212552", "C00212551", "C00078304", "C00215926", "C00215927", "C00089220", "C00233820", "C00092139", "C00233816", "C00403674", "C00233817", "C00233818", "C00233819", "C00233812", "C00233813", "C00196746", "C00165301", "C00165302", "C00165303", "C00165304", "C00119012", "C00119016", "C00076628", "C00076629", "B00004653", "C00004540", "B00005378", "B00005370", "B00005299", "C00074178", "C00165307", "C00165308", "C00076661", "C00076874", "C00008711", "C00059724", "C00065153", "C00076659", "C00145023", "C00076646", "C00076652", "C00076657", "C00076658", "C00076640", "C00076641", "B00004653", "B00004653", "B00004653", "C00004548", "C00059724", "C00250109", "C00250110", "C00074245", "C00076596", "C00076597", "C00076598", "C00076599", "C00218114", "C00218115", "C00059723", "C00059724", "B00005330", "C00088609", "C00319434", "C00092437", "C00092929", "B00004762", "C00083957", "C00147133", "B00003507", "C00061106", "B00003507", "C00050526", "C00076267", "C00100423", "C00074572", "B00005714", "C00074798", "C00076347", "B00005253", "C00105997", "C00299541", "C00191866", "C00191865", "B00004110", "B00003507", "B00003509", "B00004152", "B00004152", "C00254995-2150", "C00144066", "C00286759", "B00005233", "C00246076", "C00105782", "C00225587", "C00154733", "C00154733", "C00218026", "C00184621", "C00209969", "C00218030", "C00406026", "C00077444", "C00140528", "C00077445", "C00077451", "C00077453", "B00004031", "B00004096", "C00094838", "B00004606", "C00095631", "C00095601", "C00118375", "B00004025", "C00331800", "C00218911", "C00003686", "B00004090", "C00117641", "C00215105", "C00103111", "C00103109", "B00003510", "C00040010", "C00040010", "C00050531", "C00124885", "C00324241", "C00088108", "B00004040", "B00004040", "C00248843", "C00248838", "C00325450", "C00218906", "C00218907", "C00088307", "C00088305", "B00003507", "B00003507", "C00165627", "C00088203", "C00165508", "C00088303", "C00237904", "C00088309", "B00004151", "C00308737", "C00247985", "B00004040", "C00086307", "C00086307", "C00285081", "C00094439", "B00004623", "B00004111", "C00081442", "C00004548", "C00205146", "B00004839", "C00091382-4100", "C00091385-4100", "C00076721-4100", "C00076726-4100", "C00025126", "C00094051", "C00063297", "C00096313", "C00085877", "C00085802", "B00004623", "B00004979", "C00120535-4100", "C00076592", "C00076593", "B00003508", "B00004762", "C00076595", "C00108694", "C00076594", "C00126383", "C00076739", "C00185421", "C00185422", "C00053812", "C00045073", "C00045073", "C00013590", "C00193190", "C00073987", "C00073990", "C00073991", "C00105549", "C00087988", "C00105548", "C00105550", "C00075461", "C00075464", "B00004085", "B00004085", "C00051001", "B00004303", "B00005251", "B00004085", "C00188950", "B00004105", "C00166147", "C00074203", "C00074198", "C00220664", "C00089389", "C00220660", "C00002828", "C00220665", "C00220685", "C00220657", "C00002785", "C00127741", "C00173630", "C00173631", "C00220787", "C00087402", "C00085967", "C00094244", "B00004681", "C00025126", "B00005370", "B00003507", "B00003507", "B00004303", "C00283549", "C00112941", "C00112940", "C00112939", "C00112937", "C00260664", "C00112886", "C00075246", "B00004087", "C00131184", "C00042951", "C00047796", "C00066076", "C00271290", "C00056376", "B00005301", "C00075255", "C00199382", "C00075250", "C00275603", "C00086849", "C00075258", "C00086848", "C00075276", "C00276004", "C00075208", "C00075266", "C00075264", "C00075268", "C00075267", "B00005253", "C00275602", "C00075282", "B00005301", "C00180032", "C00180031", "B00003507", "C00088979", "C00079649", "C00084054", "C00066128", "C00088004", "B00004861", "C00112684", "C00079751", "C00334116", "B00005316", "C00072843", "C00290871", "C00888852", "C00120693", "C00075228", "C00120691", "C00120693", "C00075228", "C00044727", "C00120693", "C00120691", "C00093293", "C00087800", "C00075443", "C00075385", "C00074835", "C00094056", "C00075450", "C00075451", "C00094057", "B00004303", "B00004303", "B00004034", "B00004085", "B00004085", "B00004085", "B00004085", "B00004303", "B00005677", "B00003510", "B00003507", "B00003507", "B00004861", "B00004209", "B00003507", "B00003507", "B00003510", "B00004861", "B00004861", "B00003507", "B00003507", "B00004209", "C00080085", "C00001115", "C00097278", "C00097277", "B00003510", "B00004209", "B00004955", "B00004955", "B00003507", "B00003507", "C00173622", "C00173629", "C00173630", "C00173631", "B00004793", "B00005212", "B00004955", "B00004955", "C00077223", "C00147638", "C00147636", "B00004793", "B00005212", "B00004955", "B00004955", "C00077223", "C00147638", "C00147636", "B00004793", "B00005212", "B00004955", "B00004955", "C00077223", "C00147638", "C00147636", "B00004793", "B00005212", "B00004955", "B00004955", "C00118100-F067", "C00118101-F067", "C00118099-A126", "C00118107-A126", "C00076148", "C00076148", "B00004623", "B00004623", "C00076723", "C00076727", "B00004653", "B00004653", "B00004653", "B00004653", "B00004653", "C00211486-A126", "C00118098-A126", "C00103630", "C00106909", "C00106909", "C00106909", "C00106920", "C00106920", "C00110318", "C00110318", "C00110318", "C00110318", "C00110318", "C00110325", "C00212331", "C00618313", "C00618314", "C00105102", "C00013191", "C00304649", "C00211494", "C00211490", "C00211493", "C00118089", "C00076767", "C00118100-F067", "C00118101-F067", "C00118098-A126", "C00118099-A126", "C00118107-A126", "C00118102", "C00086385", "B00004623", "B00004623", "C00076723", "C00076727", "B00004653", "B00004653", "B00004653", "B00004653", "B00004653", "C00118087-2144", "C00118088-2144", "C00118081-F142", "C00118080", "C00006353", "C00086391", "C00039810", "C00118092", "C00211498", "C00211499", "C00106909", "C00106909", "C00106909", "C00106920", "C00106920", "C00212331", "C00110318", "C00110318", "C00110318", "C00110318", "C00110318", "C00110325", "C00130035", "C00176145", "C00176147", "C00192366", "C00202409", "C00085566", "C00085567", "C00137669", "C00003839", "C00003839", "C00143826", "C00143826", "C00143826", "C00143826", "C00143826", "C00017856", "C00211013-M020", "C00017857", "C00017865", "C00017865", "C00017865", "C00017865", "C00017865", "C00017865", "C00113728-A134", "C00013585", "C00014021", "C00089683", "C00013586", "B00004839", "C00109671", "C00109700", "C00109701", "C00140364", "C00059724", "C00059724", "C00247596", "C00076493", "C00094630", "C00108300", "C00077532", "C00141889", "C00180814", "C00234019", "C00085564", "C00085565", "C00113479", "C00097852", "C00108752", "B00005391", "B00005391", "C00004540", "C00004642", "B00005235", "C00004548", "C00004548", "C00274378", "C00023898", "C00023899", "C00211512", "C00216465", "C00042013", "C00078418-A131", "C00078419-A131", "C00078379-A132", "C00078379-F050", "C00078389-A132", "C00078389-F050", "B00004653", "B00004653", "B00004653", "C00004540", "C00004540", "C00004540", "C00070907", "C00078369", "B00004110", "C00004535", "C00097839", "C00259013", "C00259014", "C00076885", "C00076886", "C00076861", "C00076862", "C00085857", "C00085858", "C00078402", "C00078401", "C00076890", "C00076889", "C00059724", "C00078353", "C00059724", "C00349765-A136", "C00349766-A136", "C00100187-A136", "C00100189-A136", "C00100202-A126", "C00100209-A126", "C00112991", "C00141395-A133", "C00077433-A133", "C00195712-F060", "C00108753-A133", "C00108753-F060", "C00137677-A133", "C00137677-F060", "B00005677", "B00005677", "C00041988", "C00041988", "C00047244", "C00047244", "C00047244", "C00004535", "C00004535", "C00107339", "C00074543", "C00074544", "C00137544", "B00004906", "B00004938", "B00004941", "C00074547", "B00004983", "B00005355", "B00005001", "B00005714", "C00083490", "C00235633", "C00471078", "C00471087", "C00539863", "C00539866", "C00539867", "C00022603", "C00218066", "C00022606", "C00521629", "C00112996", "C00210106", "C00103428", "C00693370", "C00221439", "C00207343", "C00004983", "C00086365", "C00075940", "C00130100", "C00086359", "C00085493", "C00094575"]

def extract_whs_and_stock():
    try:
        html = driver.page_source
        soup = BeautifulSoup(html, "html.parser")

        # Find the exact match for the target row div
        target_div = soup.find("div", style=lambda s: s and
            "overflow: hidden" in s and
            "user-select: none" in s and
            "height: 19px" in s and
            "position: relative" in s and
            "z-index: 0" in s and
            "width: 1072px" in s and
            "border-bottom-color: transparent" in s)

        if not target_div:
            print("❌ Specific styled target row div not found.")
            return {}

        # Now find first two z-index: 3 divs inside
        z3_divs = target_div.find_all("div", style=lambda s: s and "z-index: 3" in s)
        if len(z3_divs) < 2:
            print("❌ Less than two z-index:3 divs found.")
            return {}

        whs_value = z3_divs[0].get_text(strip=True)
        stock_value = z3_divs[1].get_text(strip=True)

        return {
            "whs": whs_value,
            "stock_available": stock_value
        }

    except Exception as e:
        print(f"Error extracting WHS and stock: {e}")
        traceback.print_exc()
        return {}

# Create output folder named with date and time
output_folder = datetime.now().strftime("output_%Y%m%d_%H%M%S")
os.makedirs(output_folder, exist_ok=True)

def run_all_codes():
    print("Finding XT window...")

    xt_window = None
    all_windows = driver.window_handles

    for window_handle in all_windows:
        driver.switch_to.window(window_handle)
        if "XT" in driver.title:
            xt_window = window_handle
            print(f"Found XT window: {driver.title}")
            break

    if not xt_window:
        print("XT window not found.")
        return

    driver.switch_to.window(xt_window)

    # Adjust end if it's out of range
    actual_end = end if end <= len(codes) else len(codes)
    selected_codes = codes[start:actual_end]
    for code in selected_codes:
        try:
            print(f"\nProcessing code: {code}")
            active_element = driver.switch_to.active_element
            active_element.clear()
            active_element.send_keys(code)
            active_element.send_keys(Keys.RETURN)

            print("Submitted. Waiting 5 seconds...")
            time.sleep(2)

            form_data = extract_all_form_values()
            extra_data = extract_whs_and_stock()

            if form_data:
                form_data['whs_stock'] = extra_data
                filename = os.path.join(output_folder, f"{code}.json")
                with open(filename, "w", encoding="utf-8") as f:
                    json.dump(form_data, f, indent=2, ensure_ascii=False)
                print(f"Saved to {filename}")
        except Exception as e:
            print(f"Error with code {code}: {e}")
            traceback.print_exc()
    print("✅ Finished processing selected codes.")

# Keyboard event handlers
def on_press(key):
    try:
        if hasattr(key, 'char') and key.char:
            if key.char.lower() == 'g':
                run_all_codes()
            elif key.char.lower() == 'q':
                print("\nQuitting and saving collected form data if any...")
                if collected_form_data:
                    with open("collected_form_data.json", "w", encoding="utf-8") as f:
                        json.dump(collected_form_data, f, indent=2, ensure_ascii=False)
                    print("Form data saved to 'collected_form_data.json'")
                driver.quit()
                return False
        elif key == keyboard.Key.enter:
            print("Enter key pressed (no action assigned).")
    except AttributeError:
        pass

input("Press Enter once you've logged in successfully...")

print("\n✅ Ready!")
print("→ Press 'g' to process all codes.")
print("→ Press 'q' to quit and save.")
print("Listening for keystrokes...")

with keyboard.Listener(on_press=on_press) as listener:
    listener.join()
